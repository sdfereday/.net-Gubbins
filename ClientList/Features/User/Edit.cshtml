@model ClientList.ViewModels.UserViewModel;

@{
    ViewData["Title"] = "Edit";
}
<html>
<head>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/styles.css" rel="stylesheet" />
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col">
                <h2>@ViewData["Title"].</h2>
                <ul class="nav">
                    <li class="nav-item">@Html.ActionLink("Home", "Index", "Client")</li>
                    <li class="nav-item">@Html.ActionLink("List Clients", "EditList", "Client")</li>
                    <li class="nav-item">@Html.ActionLink("Create Client", "Create", "Client")</li>
                    <li class="nav-item">@Html.ActionLink("List Users", "EditList", "User")</li>
                    <li class="nav-item">@Html.ActionLink("Create User", "Create", "User")</li>
                </ul>
                <form action="@Model.Id" method="post">
                    <p>Associated Client:</p>
                    <p><strong>@Model.ClientId</strong></p>
                    @if (Model != null && Model.Clients != null && Model.Clients.Count() > 0)
                    {
                        @Html.DropDownListFor(model => model.ClientId, new SelectList(Model.Clients, "Id", "Name"), "Select Associated Client", new { @id = "ClientId", @class = "input-large form-control" })
                    }
                    else
                    {
                        <p>No clients found.</p>

                    }
                    <p>@Html.DisplayNameFor(model => model.FirstName)</p>
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    <p>@Html.DisplayNameFor(model => model.LastName)</p>
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    <p>@Html.DisplayNameFor(model => model.Email)</p>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    <input type="submit" />
                </form>
            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
</body>
</html>